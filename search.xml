<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[学习c++的一系列问题]]></title>
    <url>%2F2017%2F11%2F14%2Fcpp%E9%97%AE%E9%A2%98%2F</url>
    <content type="text"><![CDATA[问题1：char字符居然占了4个字节，而sizeof(char)是112345678910111213141516171819202122232425#include&lt;iostream&gt;int main()&#123; struct Student &#123; int num; char name[20]; char sex; int age; float score; char addr[30]; &#125;; Student student1 =&#123;10002,"Wang Li" ,'F',20,98,"beijing"&#125;; void *pt; pt = &amp;student1.sex; cout&lt;&lt;"num's address: "&lt;&lt;&amp;student1.num&lt;&lt;endl; cout&lt;&lt;"name's address: "&lt;&lt;&amp;student1.name&lt;&lt;endl; cout&lt;&lt;"sex's address: "&lt;&lt;&amp;student1.sex&lt;&lt;endl; cout&lt;&lt;"sex's address: "&lt;&lt;pt&lt;&lt;endl; cout&lt;&lt;"age's address: "&lt;&lt;&amp;student1.age&lt;&lt;endl; cout&lt;&lt;"score's address: "&lt;&lt;&amp;student1.score&lt;&lt;endl; cout&lt;&lt;"addr's address: "&lt;&lt;&amp;student1.addr&lt;&lt;endl; cout&lt;&lt;sizeof('F')&lt;&lt;endl; return 0;&#125; 结果如下 可见，sex的首地址与age的首地址相差4个字节 解释：char类型比较特殊，char右边的字符是按转成ascii存储的，实际占4个字节，当赋值给char类型的变量，会把高位的3个字节舍弃，压入到char类型中。 问题2：为什么直接输出char类型变量的地址为乱码代码同上，直接用 输出为’F‘，这算比较好的情况了，一般是输出乱码。而把这个地址赋值给void指针，才能正常输出。赋值给char指针同样输出乱码。123456#### 解释：《运算符重载的时候，当参数是 char * 时 ，cout就输出字符串，比如：``` cppchar * p =&quot;aaaa&quot;;cout&lt;&lt;p&lt;&lt;endl; p存放的是字符串“aaaa”的首地址，cout从首地址指向的字符依次输出，碰到’、0‘停止输出输出是“aaaa”123456789#include&lt;iostream&gt;using namespace std;int main()&#123; char a = 'F'; cout&lt;&lt;&amp;a&lt;&lt;endl; return 0;&#125; &amp;a 的类型就是char * 了,&amp;a存放了a的地址，cout从首地址按字符依次输出，遇到’、0‘停止。实际上，从&amp;a往后的内存空间中，我们并不知道什么时候会遇到’\0‘,所以这个乱码有长有短，飘忽不定。]]></content>
      <categories>
        <category>c++</category>
      </categories>
      <tags>
        <tag>c++</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[First]]></title>
    <url>%2F2017%2F11%2F09%2FFirst%2F</url>
    <content type="text"><![CDATA[你好]]></content>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2017%2F11%2F09%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
      <tags>
        <tag>atrticle</tag>
      </tags>
  </entry>
</search>
